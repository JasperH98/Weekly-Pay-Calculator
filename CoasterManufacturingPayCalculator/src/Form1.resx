<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bwAAAABJRU5ErkJggg==
</value>
  </data>
</root>